generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model fields {
  id            Int             @id @default(autoincrement())
  name          String?
  user_s_fields user_s_fields[]
}

model skills {
  id            Int             @id @default(autoincrement())
  name          String?
  user_s_skills user_s_skills[]
}

model user_s_skills {
  user_id  Int    @default(autoincrement())
  skill_id Int
  skills   skills @relation(fields: [skill_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users    users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, skill_id], map: "personal_skills_pkey")
  @@map("user's_skills")
}

model users {
  id            Int             @id @unique @default(autoincrement())
  username      String?         @unique
  email         String?
  role          String?         @default("")
  background    String?         @default("")
  introduction  String?         @default("")
  avatar        String?
  user_s_fields user_s_fields[]
  user_s_skills user_s_skills[]
}

model user_s_fields {
  user_id  Int    @default(autoincrement())
  field_id Int
  fields   fields @relation(fields: [field_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users    users  @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, field_id], map: "user's_specialized_fields_pkey")
  @@map("user's_fields")
}

model roles {
  id   Int     @id @default(autoincrement())
  name String?
}
